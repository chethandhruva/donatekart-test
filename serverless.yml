service: chethan
frameworkVersion: '2'

plugins:
  - serverless-offline

custom:
  config: '${file(config.json)}'
  standardRequest:
    template:
      application/json: '${file(requestTemplate.vm)}'
  standardResponse:
    headers:
      Access-Control-Allow-Origin: "'*'"
    statusCodes:
      500:
        pattern: '\{"error":.*'
        template:
          application/json: '${file(responseTemplate.vm)}'
  standardCors:
    origin: '*'
    headers:
      - Origin
      - X-Requested-With
      - Content-Type
      - Accept
      - X-Amz-Date
      - Authorization
      - X-Api-Key
      - X-Amz-Security-Token
      - Cache-Control
      - Accept
      - Accept-Encoding

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: ${self:custom.config.lambdaRegion}
  versionFunctions: false
  timeout: 30 # optional, in seconds, default is 6 # api gateway timeout 29 second
  endpointType: REGIONAL


functions:
  campaignManagement:
    handler: handler.invoke
    events:
      - http:
          path: campaign/list
          method: get
          request: ${self:custom.standardRequest}
          response: ${self:custom.standardResponse}
          integration: lambda
          cors: ${self:custom.standardCors}
      - http:
          path: campaign/active
          method: get
          request: ${self:custom.standardRequest}
          response: ${self:custom.standardResponse}
          integration: lambda
          cors: ${self:custom.standardCors}
      - http:
          path: campaign/closed
          method: get
          request: ${self:custom.standardRequest}
          response: ${self:custom.standardResponse}
          integration: lambda
          cors: ${self:custom.standardCors}
